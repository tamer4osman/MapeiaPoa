buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}
plugins {
    id 'java'
    id 'war'
    id 'idea'
    id 'jacoco'
}
repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

apply plugin: 'spring-boot'

sourceSets {
    integrationTests {
        java.srcDir file('src/test/java/integration')
        resources.srcDir file('src/test/resources')
    }

    unitTests {
        java.srcDir file('src/test/java/unit')
        resources.srcDir file('src/test/resources')
    }
}

jar {
    baseName = 'mapeia-poa'
    version =  '0.1.0'
}


war {
    baseName = 'mapeia-poa'
    version =  '0.1.0'
    rootSpec.exclude("**/node_modules/**") 
}

configurations {
    providedRuntime
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile "org.projectlombok:lombok:1.16.6"
    compile 'com.google.guava:guava:19.0'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    providedRuntime 'org.springframework.boot:spring-boot-starter-jetty'

    testCompile("junit:junit")
    testCompile 'com.jayway.restassured:rest-assured:2.8.0'
    testCompile("org.springframework.boot:spring-boot-starter-test")

    integrationTestsCompile sourceSets.main.output
    integrationTestsCompile configurations.testCompile
    integrationTestsCompile sourceSets.test.output
    integrationTestsRuntime configurations.testRuntime

    unitTestsCompile sourceSets.main.output
    unitTestsCompile configurations.testCompile
    unitTestsCompile sourceSets.test.output
    unitTestsCompile configurations.testRuntime
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

idea {
  module {
    //if you prefer different SDK than the one inherited from IDEA project
    jdkName = '1.8'
  }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

task integrationTests(type: Test) {
    doFirst{ tasks.startMongo.execute() }
    testClassesDir = sourceSets.integrationTests.output.classesDir
    classpath = sourceSets.integrationTests.runtimeClasspath
    doLast{ tasks.stopMongo.execute() }
}

task unitTests(type: Test) {
    testClassesDir = sourceSets.unitTests.output.classesDir
    classpath = sourceSets.unitTests.runtimeClasspath
}

task runMongo(type: Exec) {
    commandLine 'docker', 'run', '-d', '-p', '27018:27017', '--name', 'mongo_test', 'mongo:3.2'
}

task startMongo(type: Exec, dependsOn: 'stopMongo') {
    commandLine 'docker', 'start', 'mongo_test'
}

task stopMongo(type: Exec) {
    commandLine 'docker', 'stop', 'mongo_test'
}
